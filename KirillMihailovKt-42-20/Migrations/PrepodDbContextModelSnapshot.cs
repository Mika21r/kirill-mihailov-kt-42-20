// <auto-generated />
using System;
using KirillMihailovKt_42_20.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KirillMihailovKt_42_20.Migrations
{
    [DbContext(typeof(PrepodDbContext))]
    partial class PrepodDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academicdegree_id")
                        .HasComment("Идентификатор записи ученной степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("AcademicDegreeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_academicdegreeName")
                        .HasComment("Ученная степень");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cd_academicdegree_academicdegree_id");

                    b.ToTable("cd_academicdegree", (string)null);
                });

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.Kafedra", b =>
                {
                    b.Property<int>("KafedraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kafedra_id")
                        .HasComment("Идентификатор записи кафедрыы");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KafedraId"));

                    b.Property<DateTime>("DateFoundation")
                        .HasColumnType("DateTime")
                        .HasColumnName("c_kafedra_DateFoundation")
                        .HasComment("Дата основания кафедры");

                    b.Property<string>("KafedraName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_kafedra_name")
                        .HasComment("Название кафедры");

                    b.Property<int>("PrepodCount")
                        .HasColumnType("int")
                        .HasColumnName("c_kafedra_PrepodCount")
                        .HasComment("Количество преподавателей в кафедре");

                    b.HasKey("KafedraId")
                        .HasName("pk_cd_kafedra_kafedra_id");

                    b.ToTable("Kafedra");
                });

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.Prepod", b =>
                {
                    b.Property<int>("PrepodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prepod_id")
                        .HasComment("Идентификатор записи преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrepodId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("c_prepod_academicdegreeId")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_prepod_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<int>("KafedraId")
                        .HasColumnType("int")
                        .HasColumnName("c_kafedra_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_prepod_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_prepod_middlename")
                        .HasComment("Отчество преподавателя");

                    b.HasKey("PrepodId")
                        .HasName("pk_cd_prepod_prepod_id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("KafedraId");

                    b.ToTable("cd_prepod", (string)null);
                });

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.Prepod", b =>
                {
                    b.HasOne("KirillMihailovKt_42_20.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Prepod")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_academicdegree_id");

                    b.HasOne("KirillMihailovKt_42_20.Models.Kafedra", "Kafedra")
                        .WithMany("Prepod")
                        .HasForeignKey("KafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_kafedra_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Kafedra");
                });

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.AcademicDegree", b =>
                {
                    b.Navigation("Prepod");
                });

            modelBuilder.Entity("KirillMihailovKt_42_20.Models.Kafedra", b =>
                {
                    b.Navigation("Prepod");
                });
#pragma warning restore 612, 618
        }
    }
}
